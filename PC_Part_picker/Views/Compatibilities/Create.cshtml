@model PC_Part_picker.ViewModels.TwoPartCompatibilities

@{
    ViewData["Title"] = "Create";
}


<h1>Create</h1>

<h4>Compatibility</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" name="AllParts" value="@Model.AllParts" />
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    Model.AllParts.ForEach(p =>
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = p.Name,
                            Value = p.GetUniqueIdentification()
                        });
                    });
                }
                <label class="control-label">Select first part:</label>
                @Html.DropDownListFor(model => model.FirstPartId, listItems, "-- First Part --")
                <span asp-validation-for="FirstPartId" class="text-danger"></span>
                <label class="control-label">Select second part:</label>
                @Html.DropDownListFor(model => model.SecondPartId, listItems, "-- Second Part --")
                <span asp-validation-for="SecondPartId" class="text-danger"></span>
                <div></div>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
